Program -> Declaration_list $
Declaration_list -> Declaration Declaration_list
Declaration_list -> EPSILON 
Declaration -> Declaration_initial Declaration_prime
Declaration_initial ->  Type_specifier #pid ID
Declaration_prime -> Fun_declaration_prime
Declaration_prime -> Var_declaration_prime
Var_declaration_prime -> ;
Var_declaration_prime -> [ #pnum NUM ] #array ; 
Fun_declaration_prime ->  ( Params ) Compound_stmt
Type_specifier -> int
Type_specifier -> void
Params -> int #pid ID Param_prime Param_list
Params -> void
Param_list -> , Param Param_list
Param_list -> EPSILON
Param -> Declaration_initial Param_prime #pop_param
Param_prime -> [  ] #array
Param_prime -> EPSILON
Compound_stmt -> { Declaration_list Statement_list }
Statement_list -> Statement Statement_list
Statement_list -> EPSILON
Statement -> Expression_stmt
Statement -> Compound_stmt
Statement -> Selection_stmt
Statement -> Iteration_stmt
Statement -> Return_stmt
Expression_stmt -> Expression ;
Expression_stmt -> break #break ;
Expression_stmt -> ;
Selection_stmt -> if ( Expression ) #save Statement Else_stmt
Else_stmt -> endif #jpf_from_saved
Else_stmt -> else #save_and_jpf_from_last_save Statement endif #jp_from_saved
Iteration_stmt -> #save repeat #label Statement until ( Expression ) #until #out
Return_stmt -> return Return_stmt_prime
Return_stmt_prime -> ;
Return_stmt_prime -> Expression ;
Expression -> Simple_expression_zegond
Expression -> #pid ID B
B -> = Expression
B -> [ Expression ] #array H
B -> Simple_expression_prime
H -> = Expression
H -> G D C
Simple_expression_zegond -> Additive_expression_zegond C
Simple_expression_prime -> Additive_expression_prime C
C -> Relop Additive_expression #execute
C -> EPSILON
Relop -> < #push_operation
Relop -> == #push_operation
Additive_expression -> Term D
Additive_expression_prime -> Term_prime D
Additive_expression_zegond -> Term_zegond D
D -> Addop Term #execute D
D -> EPSILON
Addop -> + #push_operation
Addop -> _ #push_operation
Term -> Factor G
Term_prime -> Factor_prime G
Term_zegond -> Factor_zegond G
G -> * #push_operation Factor #execute G
G -> EPSILON
Factor -> ( Expression )
Factor -> #pid ID Var_call_prime
Factor -> #pnum NUM
Var_call_prime -> ( Args )
Var_call_prime -> Var_prime
Var_prime -> [ Expression ] #array
Var_prime -> EPSILON
Factor_prime -> ( Args )
Factor_prime -> EPSILON
Factor_zegond -> ( Expression )
Factor_zegond -> #pnum NUM
Args -> Arg_list
Args -> EPSILON
Arg_list -> Expression Arg_list_prime
Arg_list_prime -> , Expression Arg_list_prime
Arg_list_prime -> EPSILON

