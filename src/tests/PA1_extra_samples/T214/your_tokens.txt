3.	(ID, extern) (KEYWORD, int) (ID, printf) (SYMBOL, () (ID, const) (ID, char) (SYMBOL, *) (SYMBOL, ,) (SYMBOL, )) (SYMBOL, ;) 
4.	(ID, typedef) (ID, unsigned) (ID, long) (ID, t) (SYMBOL, ;) 
6.	(ID, t) (ID, start) (SYMBOL, ,) (ID, end) (SYMBOL, ;) 
7.	(KEYWORD, void) (SYMBOL, *) (ID, brk) (SYMBOL, () (ID, t) (ID, size) (SYMBOL, ,) (ID, t) (ID, align) (SYMBOL, )) 
8.	(SYMBOL, {) 
9.	(ID, t) (ID, mask) (SYMBOL, =) (ID, align) (SYMBOL, -) (NUM, 1) (SYMBOL, ;) 
10.	(KEYWORD, void) (SYMBOL, *) (ID, ret) (SYMBOL, =) (NUM, 0) (SYMBOL, ;) 
12.	(ID, do) (SYMBOL, {) 
13.	(KEYWORD, if) (SYMBOL, () (ID, expect) (SYMBOL, () (SYMBOL, () (ID, start) (SYMBOL, ==) (NUM, 0) (SYMBOL, )) (SYMBOL, ,) (NUM, 0) (SYMBOL, )) (SYMBOL, )) 
14.	(ID, do) (SYMBOL, {) 
15.	(ID, printf) (SYMBOL, () (SYMBOL, )) (SYMBOL, ;) 
16.	(SYMBOL, }) (ID, while) (SYMBOL, () (NUM, 0) (SYMBOL, )) (SYMBOL, ;) 
17.	(SYMBOL, }) (ID, while) (SYMBOL, () (NUM, 0) (SYMBOL, )) (SYMBOL, ;) 
18.	(ID, end) (SYMBOL, =) (SYMBOL, () (ID, end) (SYMBOL, +) (ID, mask) (SYMBOL, )) (ID, mask) (SYMBOL, ;) 
19.	(ID, ret) (SYMBOL, =) (SYMBOL, () (KEYWORD, void) (SYMBOL, *) (SYMBOL, )) (ID, end) (SYMBOL, ;) 
20.	(ID, end) (SYMBOL, +) (SYMBOL, =) (ID, size) (SYMBOL, ;) 
22.	(KEYWORD, return) (ID, ret) (SYMBOL, ;) 
23.	(SYMBOL, }) 
25.	(ID, static) (KEYWORD, void) (ID, args) (SYMBOL, () (KEYWORD, int) (ID, a) (SYMBOL, ,) (KEYWORD, int) (ID, b) (SYMBOL, )) 
26.	(SYMBOL, {) 
27.	(KEYWORD, if) (SYMBOL, () (ID, a) (SYMBOL, =) (NUM, 1) (SYMBOL, )) 
28.	(ID, printf) (SYMBOL, () (SYMBOL, )) (SYMBOL, ;) 
29.	(KEYWORD, else) 
30.	(ID, printf) (SYMBOL, () (SYMBOL, )) (SYMBOL, ;) 
31.	(SYMBOL, }) 
33.	(KEYWORD, void) (ID, bla) (SYMBOL, () (KEYWORD, void) (SYMBOL, )) 
34.	(SYMBOL, {) 
35.	(KEYWORD, int) (ID, ret) (SYMBOL, =) (NUM, 42) (SYMBOL, ;) 
36.	(SYMBOL, () (SYMBOL, {) 
37.	(KEYWORD, if) (SYMBOL, () (ID, expect) (SYMBOL, () (SYMBOL, () (NUM, 0) (SYMBOL, )) (SYMBOL, ,) (NUM, 0) (SYMBOL, )) (SYMBOL, )) (SYMBOL, {) 
38.	(KEYWORD, if) (SYMBOL, () (ID, expect) (SYMBOL, () (ID, ret) (SYMBOL, ,) (NUM, 0) (SYMBOL, )) (SYMBOL, )) 
39.	(ID, printf) (SYMBOL, () (SYMBOL, )) (SYMBOL, ;) 
40.	(KEYWORD, int) (ID, x) (SYMBOL, =) (SYMBOL, () (ID, ret) (SYMBOL, )) (SYMBOL, ;) 
41.	(SYMBOL, }) 
42.	(ID, ret) (SYMBOL, ;) 
43.	(SYMBOL, }) (SYMBOL, )) (SYMBOL, ;) 
44.	(ID, args) (SYMBOL, () (ID, ret) (SYMBOL, ,) (ID, sizeof) (SYMBOL, () (ID, ret) (SYMBOL, )) (SYMBOL, )) (SYMBOL, ;) 
45.	(SYMBOL, }) 
47.	(ID, Bool) (ID, chk) (SYMBOL, () (ID, unsigned) (ID, long) (ID, addr) (SYMBOL, ,) (ID, unsigned) (ID, long) (ID, limit) (SYMBOL, ,) (ID, unsigned) (ID, long) (ID, size) (SYMBOL, )) 
48.	(SYMBOL, {) 
49.	(ID, Bool) (ID, ret) (SYMBOL, ;) 
52.	(KEYWORD, if) (SYMBOL, () (NUM, 0) (SYMBOL, )) 
53.	(ID, ret) (SYMBOL, =) (NUM, 0) (SYMBOL, =) (SYMBOL, () (SYMBOL, () (ID, addr) (ID, limit) (SYMBOL, -) (ID, size) (SYMBOL, )) (SYMBOL, )) (SYMBOL, ;) 
54.	(SYMBOL, }) 
56.	(KEYWORD, int) (ID, main) (SYMBOL, () (SYMBOL, )) 
57.	(SYMBOL, {) 
58.	(KEYWORD, void) (SYMBOL, *) (ID, r) (SYMBOL, ;) 
59.	(ID, start) (SYMBOL, =) (NUM, 1024) (SYMBOL, ;) 
60.	(ID, end) (SYMBOL, =) (NUM, 1024) (SYMBOL, ;) 
61.	(ID, r) (SYMBOL, =) (ID, brk) (SYMBOL, () (NUM, 4096) (SYMBOL, ,) (NUM, 16) (SYMBOL, )) (SYMBOL, ;) 
62.	(KEYWORD, if) (SYMBOL, () (ID, r) (SYMBOL, )) 
63.	(ID, printf) (SYMBOL, () (SYMBOL, )) (SYMBOL, ;) 
64.	(KEYWORD, else) 
65.	(ID, printf) (SYMBOL, () (SYMBOL, )) (SYMBOL, ;) 
66.	(ID, bla) (SYMBOL, () (SYMBOL, )) (SYMBOL, ;) 
67.	(KEYWORD, return) (NUM, 0) (SYMBOL, ;) 
68.	(SYMBOL, }) 
