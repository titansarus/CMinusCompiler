3.	(ID, enum) (ID, E) (SYMBOL, *) (ID, e) (SYMBOL, ;) 
4.	(ID, const) (ID, enum) (ID, E) (SYMBOL, *) (ID, e1) (SYMBOL, ;) 
5.	(ID, enum) (ID, E) (ID, const) (SYMBOL, *) (ID, e2) (SYMBOL, ;) 
6.	(ID, struct) (ID, S) (SYMBOL, *) (ID, s) (SYMBOL, ;) 
7.	(ID, const) (ID, struct) (ID, S) (SYMBOL, *) (ID, s1) (SYMBOL, ;) 
8.	(ID, struct) (ID, S) (ID, const) (SYMBOL, *) (ID, s2) (SYMBOL, ;) 
12.	(ID, typedef) (KEYWORD, int) (SYMBOL, () (SYMBOL, *) (ID, fptr1) (SYMBOL, )) (SYMBOL, () (SYMBOL, )) (SYMBOL, ;) 
13.	(KEYWORD, int) (ID, f1) (SYMBOL, () (KEYWORD, int) (SYMBOL, () (SYMBOL, )) (SYMBOL, ,) (KEYWORD, int) (SYMBOL, )) (SYMBOL, ;) 
14.	(ID, typedef) (KEYWORD, int) (SYMBOL, () (SYMBOL, *) (ID, fptr2) (SYMBOL, )) (SYMBOL, () (KEYWORD, int) (ID, x) (SYMBOL, )) (SYMBOL, ;) 
15.	(KEYWORD, int) (ID, f2) (SYMBOL, () (KEYWORD, int) (SYMBOL, () (KEYWORD, int) (ID, x) (SYMBOL, )) (SYMBOL, ,) (KEYWORD, int) (SYMBOL, )) (SYMBOL, ;) 
16.	(ID, typedef) (KEYWORD, int) (SYMBOL, () (SYMBOL, *) (ID, fptr3) (SYMBOL, )) (SYMBOL, () (KEYWORD, int) (SYMBOL, )) (SYMBOL, ;) 
17.	(KEYWORD, int) (ID, f3) (SYMBOL, () (KEYWORD, int) (SYMBOL, () (KEYWORD, int) (SYMBOL, )) (SYMBOL, ,) (KEYWORD, int) (SYMBOL, )) (SYMBOL, ;) 
18.	(ID, typedef) (KEYWORD, int) (SYMBOL, () (SYMBOL, *) (ID, fptr4) (SYMBOL, [) (NUM, 4) (SYMBOL, ]) (SYMBOL, )) (SYMBOL, () (KEYWORD, int) (SYMBOL, )) (SYMBOL, ;) 
19.	(KEYWORD, int) (ID, f4) (SYMBOL, () (KEYWORD, int) (SYMBOL, () (SYMBOL, *) (SYMBOL, [) (NUM, 4) (SYMBOL, ]) (SYMBOL, )) (SYMBOL, () (KEYWORD, int) (SYMBOL, )) (SYMBOL, ,) (KEYWORD, int) (SYMBOL, )) (SYMBOL, ;) 
20.	(ID, typedef) (KEYWORD, int) (SYMBOL, () (SYMBOL, *) (ID, fptr5) (SYMBOL, )) (SYMBOL, () (ID, fptr1) (SYMBOL, )) (SYMBOL, ;) 
21.	(KEYWORD, int) (ID, f5) (SYMBOL, () (KEYWORD, int) (SYMBOL, () (KEYWORD, int) (SYMBOL, () (SYMBOL, )) (SYMBOL, )) (SYMBOL, ,) (ID, fptr1) (SYMBOL, )) (SYMBOL, ;) 
22.	(KEYWORD, int) (ID, f1) (SYMBOL, () (ID, fptr1) (ID, fp) (SYMBOL, ,) (KEYWORD, int) (ID, i) (SYMBOL, )) 
23.	(SYMBOL, {) 
24.	(KEYWORD, return) (SYMBOL, () (SYMBOL, *) (ID, fp) (SYMBOL, )) (SYMBOL, () (ID, i) (SYMBOL, )) (SYMBOL, ;) 
25.	(SYMBOL, }) 
26.	(KEYWORD, int) (ID, f2) (SYMBOL, () (ID, fptr2) (ID, fp) (SYMBOL, ,) (KEYWORD, int) (ID, i) (SYMBOL, )) 
27.	(SYMBOL, {) 
28.	(KEYWORD, return) (SYMBOL, () (SYMBOL, *) (ID, fp) (SYMBOL, )) (SYMBOL, () (ID, i) (SYMBOL, )) (SYMBOL, ;) 
29.	(SYMBOL, }) 
30.	(KEYWORD, int) (ID, f3) (SYMBOL, () (ID, fptr3) (ID, fp) (SYMBOL, ,) (KEYWORD, int) (ID, i) (SYMBOL, )) 
31.	(SYMBOL, {) 
32.	(KEYWORD, return) (SYMBOL, () (SYMBOL, *) (ID, fp) (SYMBOL, )) (SYMBOL, () (ID, i) (SYMBOL, )) (SYMBOL, ;) 
33.	(SYMBOL, }) 
34.	(KEYWORD, int) (ID, f4) (SYMBOL, () (ID, fptr4) (ID, fp) (SYMBOL, ,) (KEYWORD, int) (ID, i) (SYMBOL, )) 
35.	(SYMBOL, {) 
36.	(KEYWORD, return) (SYMBOL, () (SYMBOL, *) (ID, fp) (SYMBOL, [) (ID, i) (SYMBOL, ]) (SYMBOL, )) (SYMBOL, () (ID, i) (SYMBOL, )) (SYMBOL, ;) 
37.	(SYMBOL, }) 
38.	(KEYWORD, int) (ID, f5) (SYMBOL, () (ID, fptr5) (ID, fp) (SYMBOL, ,) (ID, fptr1) (ID, i) (SYMBOL, )) 
39.	(SYMBOL, {) 
40.	(KEYWORD, return) (ID, fp) (SYMBOL, () (ID, i) (SYMBOL, )) (SYMBOL, ;) 
41.	(SYMBOL, }) 
42.	(KEYWORD, int) (ID, f8) (SYMBOL, () (KEYWORD, int) (SYMBOL, () (SYMBOL, [) (NUM, 4) (SYMBOL, ]) (SYMBOL, )) (SYMBOL, ,) (KEYWORD, int) (SYMBOL, )) (SYMBOL, ;) 
43.	(KEYWORD, int) (ID, main) (SYMBOL, () (SYMBOL, )) (SYMBOL, {) (KEYWORD, return) (NUM, 0) (SYMBOL, ;) (SYMBOL, }) 
