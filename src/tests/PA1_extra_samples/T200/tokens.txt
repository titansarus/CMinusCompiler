10.	(ID, include) (SYMBOL, <) 
12.	(ID, define) (ID, PTYPE) (SYMBOL, () (ID, M) (SYMBOL, )) (SYMBOL, () (SYMBOL, () (ID, M) (SYMBOL, )) (SYMBOL, <) (NUM, 0) (SYMBOL, -) (SYMBOL, () (ID, M) (SYMBOL, )) (SYMBOL, <) (NUM, 0) (SYMBOL, -) (NUM, 1) (SYMBOL, :) (NUM, 1) (SYMBOL, )) (SYMBOL, *) (SYMBOL, () (KEYWORD, int) (SYMBOL, )) (ID, sizeof) (SYMBOL, () (SYMBOL, () (ID, M) (SYMBOL, )) (SYMBOL, +) (NUM, 0) (SYMBOL, )) 
13.	(ID, define) (ID, CHECK) (SYMBOL, () (ID, X) (SYMBOL, ,) (ID, T) (SYMBOL, )) (ID, check) (SYMBOL, () (ID, X) (SYMBOL, ,) (ID, PTYPE) (SYMBOL, () (ID, X) (SYMBOL, )) (SYMBOL, ,) (ID, PTYPE) (SYMBOL, () (SYMBOL, () (ID, X) (SYMBOL, )) (SYMBOL, <) (SYMBOL, <) (SYMBOL, () (ID, T) (SYMBOL, )) (NUM, 1) (SYMBOL, )) (SYMBOL, )) 
14.	(ID, define) (ID, TEST1) (SYMBOL, () (ID, X) (SYMBOL, ,) (ID, T) (SYMBOL, )) (ID, do) (SYMBOL, {) (ID, CHECK) (SYMBOL, () (ID, X) (SYMBOL, ,) (ID, T) (SYMBOL, )) (SYMBOL, ;) (ID, CHECK) (SYMBOL, () (ID, X) (SYMBOL, ,) (ID, unsigned) (ID, T) (SYMBOL, )) (SYMBOL, ;) (SYMBOL, }) (ID, while) (SYMBOL, () (NUM, 0) (SYMBOL, )) 
15.	(ID, define) (ID, TEST2) (SYMBOL, () (ID, X) (SYMBOL, )) 
16.	(ID, do) 
17.	(SYMBOL, {) 
18.	(ID, TEST1) (SYMBOL, () (SYMBOL, () (ID, X) (SYMBOL, )) (SYMBOL, ,) (ID, short) (SYMBOL, )) (SYMBOL, ;) 
19.	(ID, TEST1) (SYMBOL, () (SYMBOL, () (ID, X) (SYMBOL, )) (SYMBOL, ,) (KEYWORD, int) (SYMBOL, )) (SYMBOL, ;) 
20.	(ID, TEST1) (SYMBOL, () (SYMBOL, () (ID, X) (SYMBOL, )) (SYMBOL, ,) (ID, long) (SYMBOL, )) (SYMBOL, ;) 
21.	(ID, TEST1) (SYMBOL, () (SYMBOL, () (ID, X) (SYMBOL, )) (SYMBOL, ,) (ID, long) (ID, long) (SYMBOL, )) (SYMBOL, ;) 
22.	(SYMBOL, }) 
23.	(ID, while) (SYMBOL, () (NUM, 0) (SYMBOL, )) 
24.	(ID, define) (ID, TEST3) (SYMBOL, () (ID, X) (SYMBOL, ,) (ID, T) (SYMBOL, )) (ID, do) (SYMBOL, {) (ID, TEST2) (SYMBOL, () (SYMBOL, () (ID, T) (SYMBOL, )) (SYMBOL, () (ID, X) (SYMBOL, )) (SYMBOL, )) (SYMBOL, ;) (ID, TEST2) (SYMBOL, () (SYMBOL, () (ID, unsigned) (ID, T) (SYMBOL, )) (SYMBOL, () (ID, X) (SYMBOL, )) (SYMBOL, )) (SYMBOL, ;) (SYMBOL, }) (ID, while) (SYMBOL, () (NUM, 0) (SYMBOL, )) 
25.	(ID, define) (ID, TEST4) (SYMBOL, () (ID, X) (SYMBOL, )) 
26.	(ID, do) 
27.	(SYMBOL, {) 
28.	(ID, TEST3) (SYMBOL, () (SYMBOL, () (ID, X) (SYMBOL, )) (SYMBOL, ,) (ID, short) (SYMBOL, )) (SYMBOL, ;) 
29.	(ID, TEST3) (SYMBOL, () (SYMBOL, () (ID, X) (SYMBOL, )) (SYMBOL, ,) (KEYWORD, int) (SYMBOL, )) (SYMBOL, ;) 
30.	(ID, TEST3) (SYMBOL, () (SYMBOL, () (ID, X) (SYMBOL, )) (SYMBOL, ,) (ID, long) (SYMBOL, )) (SYMBOL, ;) 
31.	(ID, TEST3) (SYMBOL, () (SYMBOL, () (ID, X) (SYMBOL, )) (SYMBOL, ,) (ID, long) (ID, long) (SYMBOL, )) (SYMBOL, ;) 
32.	(SYMBOL, }) 
33.	(ID, while) (SYMBOL, () (NUM, 0) (SYMBOL, )) 
35.	(ID, static) (KEYWORD, int) (ID, debug) (SYMBOL, ,) (ID, nfailed) (SYMBOL, =) (NUM, 0) (SYMBOL, ;) 
37.	(ID, static) (KEYWORD, void) (ID, check) (SYMBOL, () (ID, const) (ID, char) (SYMBOL, *) (ID, s) (SYMBOL, ,) (KEYWORD, int) (ID, arg1) (SYMBOL, ,) (KEYWORD, int) (ID, shift) (SYMBOL, )) 
38.	(SYMBOL, {) 
39.	(KEYWORD, int) (ID, failed) (SYMBOL, =) (ID, arg1) (SYMBOL, =) (ID, shift) (SYMBOL, ;) 
40.	(KEYWORD, if) (SYMBOL, () (ID, debug) (ID, failed) (SYMBOL, )) 
41.	(ID, printf) (SYMBOL, () (ID, s) (ID, d) (SYMBOL, ,) (ID, s) (SYMBOL, ,) (ID, arg1) (SYMBOL, ,) (ID, shift) (SYMBOL, )) (SYMBOL, ;) 
42.	(ID, nfailed) (SYMBOL, +) (SYMBOL, =) (ID, failed) (SYMBOL, ;) 
43.	(SYMBOL, }) 
45.	(KEYWORD, int) (ID, main) (SYMBOL, () (KEYWORD, int) (ID, argc) (SYMBOL, ,) (ID, char) (SYMBOL, *) (SYMBOL, *) (ID, argv) (SYMBOL, )) 
46.	(SYMBOL, {) 
47.	(ID, debug) (SYMBOL, =) (ID, argc) (NUM, 1) (SYMBOL, ;) 
48.	(ID, TEST4) (SYMBOL, () (NUM, 1) (SYMBOL, )) (SYMBOL, ;) 
49.	(ID, TEST4) (SYMBOL, () (SYMBOL, -) (NUM, 1) (SYMBOL, )) (SYMBOL, ;) 
50.	(ID, printf) (SYMBOL, () (ID, d) (ID, test) (SYMBOL, () (ID, s) (SYMBOL, )) (SYMBOL, ,) (ID, nfailed) (SYMBOL, )) (SYMBOL, ;) 
51.	(KEYWORD, return) (ID, nfailed) (SYMBOL, =) (NUM, 0) (SYMBOL, ;) 
52.	(SYMBOL, }) 
