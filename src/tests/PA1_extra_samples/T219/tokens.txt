1.	(ID, include) (SYMBOL, <) 
3.	(ID, const) (KEYWORD, int) (ID, a) (SYMBOL, =) (NUM, 0) (SYMBOL, ;) 
5.	(ID, struct) (ID, a) (SYMBOL, {) 
6.	(KEYWORD, int) (ID, a) (SYMBOL, ;) 
7.	(SYMBOL, }) (SYMBOL, ;) 
9.	(ID, struct) (ID, b) (SYMBOL, {) 
10.	(KEYWORD, int) (ID, a) (SYMBOL, ;) 
11.	(SYMBOL, }) (SYMBOL, ;) 
13.	(KEYWORD, int) (ID, f) (SYMBOL, () (SYMBOL, )) 
14.	(SYMBOL, {) 
15.	(KEYWORD, return) (NUM, 20) (SYMBOL, ;) 
16.	(SYMBOL, }) 
18.	(KEYWORD, int) (ID, f) (SYMBOL, () (SYMBOL, )) 
19.	(SYMBOL, {) 
20.	(KEYWORD, return) (NUM, 10) (SYMBOL, ;) 
21.	(SYMBOL, }) 
23.	(ID, typedef) (KEYWORD, int) (SYMBOL, () (SYMBOL, *) (ID, fptr) (SYMBOL, )) (SYMBOL, () (KEYWORD, int) (SYMBOL, )) (SYMBOL, ;) 
24.	(KEYWORD, int) (ID, foo) (SYMBOL, () (KEYWORD, int) (ID, i) (SYMBOL, )) 
25.	(SYMBOL, {) 
26.	(KEYWORD, return) (ID, i) (SYMBOL, ;) 
27.	(SYMBOL, }) 
29.	(ID, typedef) (KEYWORD, int) (ID, type1) (SYMBOL, ;) 
31.	(ID, define) (ID, sw) (SYMBOL, () (ID, a) (SYMBOL, )) (ID, Generic) (SYMBOL, () (ID, a) (SYMBOL, ,) (ID, const) (ID, char) (SYMBOL, *) (SYMBOL, :) (NUM, 1) (SYMBOL, ,) (ID, default) (SYMBOL, :) (NUM, 8) (SYMBOL, ,) (KEYWORD, int) (SYMBOL, :) (NUM, 123) (SYMBOL, )) (SYMBOL, ;) 
33.	(KEYWORD, int) (ID, main) (SYMBOL, () (SYMBOL, )) 
34.	(SYMBOL, {) 
35.	(KEYWORD, int) (ID, i) (SYMBOL, =) (NUM, 0) (SYMBOL, ;) 
36.	(ID, signed) (ID, long) (KEYWORD, int) (ID, l) (SYMBOL, =) (NUM, 2) (SYMBOL, ;) 
37.	(ID, struct) (ID, b) (ID, titi) (SYMBOL, ;) 
38.	(ID, const) (KEYWORD, int) (SYMBOL, *) (ID, const) (ID, ptr) (SYMBOL, ;) 
39.	(ID, const) (ID, char) (SYMBOL, *) (ID, ti) (SYMBOL, ;) 
40.	(ID, type1) (ID, i2) (SYMBOL, ;) 
42.	(ID, i) (SYMBOL, =) (ID, Generic) (SYMBOL, () (ID, a) (SYMBOL, ,) (KEYWORD, int) (SYMBOL, :) (ID, f) (SYMBOL, ,) (ID, const) (KEYWORD, int) (SYMBOL, :) (ID, f) (SYMBOL, )) (SYMBOL, () (SYMBOL, )) (SYMBOL, ;) 
43.	(ID, printf) (SYMBOL, () (SYMBOL, ,) (ID, i) (SYMBOL, )) (SYMBOL, ;) 
44.	(ID, i) (SYMBOL, =) (ID, Generic) (SYMBOL, () (ID, a) (SYMBOL, ,) (KEYWORD, int) (SYMBOL, :) (ID, f) (SYMBOL, () (SYMBOL, )) (NUM, 2) (SYMBOL, ,) (ID, const) (KEYWORD, int) (SYMBOL, :) (ID, f) (SYMBOL, () (SYMBOL, )) (NUM, 2) (SYMBOL, )) (SYMBOL, ;) 
45.	(ID, printf) (SYMBOL, () (SYMBOL, ,) (ID, i) (SYMBOL, )) (SYMBOL, ;) 
46.	(ID, i) (SYMBOL, =) (ID, Generic) (SYMBOL, () (ID, ptr) (SYMBOL, ,) (KEYWORD, int) (SYMBOL, *) (SYMBOL, :) (NUM, 1) (SYMBOL, ,) (KEYWORD, int) (SYMBOL, *) (ID, const) (SYMBOL, :) (NUM, 2) (SYMBOL, ,) (ID, default) (SYMBOL, :) (NUM, 20) (SYMBOL, )) (SYMBOL, ;) 
47.	(ID, printf) (SYMBOL, () (SYMBOL, ,) (ID, i) (SYMBOL, )) (SYMBOL, ;) 
48.	(ID, i) (SYMBOL, =) (ID, sw) (SYMBOL, () (ID, a) (SYMBOL, )) (SYMBOL, ;) 
49.	(ID, printf) (SYMBOL, () (SYMBOL, ,) (ID, i) (SYMBOL, )) (SYMBOL, ;) 
50.	(ID, i) (SYMBOL, =) (ID, Generic) (SYMBOL, () (ID, titi) (SYMBOL, ,) (ID, struct) (ID, a) (SYMBOL, :) (NUM, 1) (SYMBOL, ,) (ID, struct) (ID, b) (SYMBOL, :) (NUM, 2) (SYMBOL, ,) (ID, default) (SYMBOL, :) (NUM, 20) (SYMBOL, )) (SYMBOL, ;) 
51.	(ID, printf) (SYMBOL, () (SYMBOL, ,) (ID, i) (SYMBOL, )) (SYMBOL, ;) 
52.	(ID, i) (SYMBOL, =) (ID, Generic) (SYMBOL, () (ID, i2) (SYMBOL, ,) (ID, char) (SYMBOL, :) (NUM, 1) (SYMBOL, ,) (KEYWORD, int) (SYMBOL, :) (NUM, 0) (SYMBOL, )) (SYMBOL, ;) 
53.	(ID, printf) (SYMBOL, () (SYMBOL, ,) (ID, i) (SYMBOL, )) (SYMBOL, ;) 
54.	(ID, i) (SYMBOL, =) (ID, Generic) (SYMBOL, () (ID, a) (SYMBOL, ,) (ID, char) (SYMBOL, :) (NUM, 1) (SYMBOL, ,) (KEYWORD, int) (SYMBOL, [) (NUM, 4) (SYMBOL, ]) (SYMBOL, :) (NUM, 2) (SYMBOL, ,) (ID, default) (SYMBOL, :) (NUM, 5) (SYMBOL, )) (SYMBOL, ;) 
55.	(ID, printf) (SYMBOL, () (SYMBOL, ,) (ID, i) (SYMBOL, )) (SYMBOL, ;) 
56.	(ID, i) (SYMBOL, =) (ID, Generic) (SYMBOL, () (NUM, 17) (SYMBOL, ,) (KEYWORD, int) (SYMBOL, :) (NUM, 1) (SYMBOL, ,) (KEYWORD, int) (SYMBOL, *) (SYMBOL, *) (SYMBOL, :) (NUM, 2) (SYMBOL, )) (SYMBOL, ;) 
57.	(ID, printf) (SYMBOL, () (SYMBOL, ,) (ID, i) (SYMBOL, )) (SYMBOL, ;) 
58.	(ID, i) (SYMBOL, =) (ID, Generic) (SYMBOL, () (SYMBOL, ,) (KEYWORD, int) (SYMBOL, :) (NUM, 1) (SYMBOL, ,) (ID, long) (SYMBOL, :) (NUM, 2) (SYMBOL, ,) (ID, long) (ID, long) (SYMBOL, :) (NUM, 3) (SYMBOL, )) (SYMBOL, ;) 
59.	(ID, printf) (SYMBOL, () (SYMBOL, ,) (ID, i) (SYMBOL, )) (SYMBOL, ;) 
60.	(ID, i) (SYMBOL, =) (ID, Generic) (SYMBOL, () (NUM, 17) (SYMBOL, ,) (SYMBOL, ,) (ID, char) (SYMBOL, *) (SYMBOL, :) (NUM, 3) (SYMBOL, ,) (ID, const) (ID, char) (SYMBOL, *) (SYMBOL, :) (NUM, 1) (SYMBOL, )) (SYMBOL, ;) 
61.	(ID, printf) (SYMBOL, () (SYMBOL, ,) (ID, i) (SYMBOL, )) (SYMBOL, ;) 
62.	(ID, i) (SYMBOL, =) (ID, Generic) (SYMBOL, () (ID, ti) (SYMBOL, ,) (ID, const) (ID, unsigned) (ID, char) (SYMBOL, *) (SYMBOL, :) (NUM, 1) (SYMBOL, ,) (ID, const) (ID, char) (SYMBOL, *) (SYMBOL, :) (NUM, 4) (SYMBOL, ,) (ID, char) (SYMBOL, *) (SYMBOL, :) (NUM, 3) (SYMBOL, ,) 
63.	(ID, const) (ID, signed) (ID, char) (SYMBOL, *) (SYMBOL, :) (NUM, 2) (SYMBOL, )) (SYMBOL, ;) 
64.	(ID, printf) (SYMBOL, () (SYMBOL, ,) (ID, i) (SYMBOL, )) (SYMBOL, ;) 
65.	(ID, printf) (SYMBOL, () (SYMBOL, ,) (ID, Generic) (SYMBOL, () (ID, i) (SYMBOL, +) (SYMBOL, ,) (ID, long) (SYMBOL, :) (SYMBOL, ,) (KEYWORD, int) (SYMBOL, :) (SYMBOL, ,) 
66.	(ID, long) (ID, long) (SYMBOL, :) (ID, long) (SYMBOL, )) (SYMBOL, )) (SYMBOL, ;) 
67.	(ID, i) (SYMBOL, =) (ID, Generic) (SYMBOL, () (ID, l) (SYMBOL, ,) (ID, long) (SYMBOL, :) (NUM, 1) (SYMBOL, ,) (KEYWORD, int) (SYMBOL, :) (NUM, 2) (SYMBOL, )) (SYMBOL, ;) 
68.	(ID, printf) (SYMBOL, () (SYMBOL, ,) (ID, i) (SYMBOL, )) (SYMBOL, ;) 
69.	(ID, i) (SYMBOL, =) (ID, Generic) (SYMBOL, () (ID, foo) (SYMBOL, ,) (ID, fptr) (SYMBOL, :) (NUM, 3) (SYMBOL, ,) (KEYWORD, int) (SYMBOL, :) (NUM, 4) (SYMBOL, )) (SYMBOL, ;) 
70.	(ID, printf) (SYMBOL, () (SYMBOL, ,) (ID, i) (SYMBOL, )) (SYMBOL, ;) 
71.	(KEYWORD, return) (NUM, 0) (SYMBOL, ;) 
72.	(SYMBOL, }) 
