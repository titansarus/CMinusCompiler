1.	(ID, include) (SYMBOL, <) 
3.	(ID, enum) (ID, fred) 
4.	(SYMBOL, {) 
5.	(ID, a) (SYMBOL, ,) 
6.	(ID, b) (SYMBOL, ,) 
7.	(ID, c) (SYMBOL, ,) 
8.	(ID, d) (SYMBOL, ,) 
9.	(ID, e) (SYMBOL, =) (NUM, 54) (SYMBOL, ,) 
10.	(ID, f) (SYMBOL, =) (NUM, 73) (SYMBOL, ,) 
11.	(ID, g) (SYMBOL, ,) 
12.	(ID, h) 
13.	(SYMBOL, }) (SYMBOL, ;) 
22.	(ID, enum) (ID, efoo) (SYMBOL, ;) 
23.	(ID, struct) (ID, use) (SYMBOL, {) 
24.	(KEYWORD, int) (SYMBOL, () (SYMBOL, *) (ID, fmember) (SYMBOL, )) (SYMBOL, () (ID, enum) (ID, efoo) (ID, x) (SYMBOL, )) (SYMBOL, ;) 
25.	(SYMBOL, }) (SYMBOL, ;) 
27.	(ID, extern) (ID, enum) (ID, efoo) (ID, fn) (SYMBOL, () (KEYWORD, void) (SYMBOL, )) (SYMBOL, ;) 
28.	(ID, enum) (ID, efoo) (SYMBOL, {) 
29.	(ID, ONE) (SYMBOL, ,) 
30.	(ID, TWO) (SYMBOL, ,) 
31.	(SYMBOL, }) (SYMBOL, ;) 
32.	(ID, struct) (ID, S2) (SYMBOL, {) 
33.	(ID, enum) (ID, efoo) (SYMBOL, () (SYMBOL, *) (ID, f2) (SYMBOL, )) (SYMBOL, () (KEYWORD, void) (SYMBOL, )) (SYMBOL, ;) 
34.	(SYMBOL, }) (SYMBOL, ;) 
35.	(KEYWORD, void) (ID, compile) (SYMBOL, () (ID, struct) (ID, S2) (SYMBOL, *) (ID, s) (SYMBOL, )) 
36.	(SYMBOL, {) 
37.	(ID, s) (SYMBOL, -) (ID, f2) (SYMBOL, =) (ID, fn) (SYMBOL, ;) 
38.	(SYMBOL, }) 
40.	(ID, enum) (ID, efoo) (ID, fn) (SYMBOL, () (KEYWORD, void) (SYMBOL, )) 
41.	(SYMBOL, {) 
42.	(KEYWORD, return) (ID, TWO) (SYMBOL, ;) 
43.	(SYMBOL, }) 
45.	(ID, static) (ID, unsigned) (KEYWORD, int) (ID, uintptr) (SYMBOL, () (ID, unsigned) (KEYWORD, int) (SYMBOL, *) (ID, p) (SYMBOL, )) 
46.	(SYMBOL, {) 
47.	(KEYWORD, return) (SYMBOL, *) (ID, p) (SYMBOL, ;) 
48.	(SYMBOL, }) 
50.	(ID, enum) (ID, Epositive) (SYMBOL, {) 
51.	(ID, one) (SYMBOL, ,) (ID, two) 
52.	(SYMBOL, }) (SYMBOL, ;) 
54.	(KEYWORD, int) (ID, main) (SYMBOL, () (SYMBOL, )) 
55.	(SYMBOL, {) 
56.	(ID, enum) (ID, fred) (ID, frod) (SYMBOL, ;) 
57.	(ID, enum) (ID, Epositive) (ID, epos) (SYMBOL, =) (ID, two) (SYMBOL, ;) 
59.	(ID, printf) (SYMBOL, () (ID, d) (ID, d) (ID, d) (ID, d) (ID, d) (ID, d) (ID, d) (SYMBOL, ,) (ID, a) (SYMBOL, ,) (ID, b) (SYMBOL, ,) (ID, c) (SYMBOL, ,) (ID, d) (SYMBOL, ,) (ID, e) (SYMBOL, ,) (ID, f) (SYMBOL, ,) (ID, g) (SYMBOL, ,) (ID, h) (SYMBOL, )) (SYMBOL, ;) 
61.	(ID, frod) (SYMBOL, =) (NUM, 12) (SYMBOL, ;) 
62.	(ID, printf) (SYMBOL, () (SYMBOL, ,) (ID, frod) (SYMBOL, )) (SYMBOL, ;) 
63.	(ID, frod) (SYMBOL, =) (ID, e) (SYMBOL, ;) 
64.	(ID, printf) (SYMBOL, () (SYMBOL, ,) (ID, frod) (SYMBOL, )) (SYMBOL, ;) 
67.	(ID, printf) (SYMBOL, () (ID, enum) (ID, to) (KEYWORD, int) (SYMBOL, :) (SYMBOL, ,) (ID, uintptr) (SYMBOL, () (ID, epos) (SYMBOL, )) (SYMBOL, )) (SYMBOL, ;) 
69.	(KEYWORD, return) (NUM, 0) (SYMBOL, ;) 
70.	(SYMBOL, }) 
