29.	(ID, include) (SYMBOL, <) 
30.	(ID, include) (SYMBOL, <) 
32.	(ID, define) (ID, TRUE) (NUM, 1) 
33.	(ID, define) (ID, FALSE) (NUM, 0) 
38.	(ID, define) (ID, N) (NUM, 4) 
43.	(KEYWORD, int) (ID, A) (SYMBOL, [) (ID, N) (SYMBOL, ]) (SYMBOL, ,) (ID, B) (SYMBOL, [) (ID, N) (SYMBOL, ]) (SYMBOL, ,) (ID, C) (SYMBOL, [) (ID, N) (SYMBOL, ]) (SYMBOL, ;) 
45.	(KEYWORD, void) (ID, Hanoi) (SYMBOL, () (KEYWORD, int) (SYMBOL, ,) (KEYWORD, int) (SYMBOL, *) (SYMBOL, ,) (KEYWORD, int) (SYMBOL, *) (SYMBOL, ,) (KEYWORD, int) (SYMBOL, *) (SYMBOL, )) (SYMBOL, ;) 
48.	(KEYWORD, void) (ID, PrintAll) (SYMBOL, () (SYMBOL, )) 
49.	(SYMBOL, {) 
50.	(KEYWORD, int) (ID, i) (SYMBOL, ;) 
52.	(ID, printf) (SYMBOL, () (ID, A) (SYMBOL, :) (SYMBOL, )) (SYMBOL, ;) 
53.	(ID, for) (SYMBOL, () (ID, i) (SYMBOL, =) (NUM, 0) (SYMBOL, ;) (ID, i) (SYMBOL, <) (ID, N) (SYMBOL, ;) (ID, i) (SYMBOL, +) (SYMBOL, +) (SYMBOL, )) (ID, printf) (SYMBOL, () (ID, d) (SYMBOL, ,) (ID, A) (SYMBOL, [) (ID, i) (SYMBOL, ]) (SYMBOL, )) (SYMBOL, ;) 
54.	(ID, printf) (SYMBOL, () (SYMBOL, )) (SYMBOL, ;) 
56.	(ID, printf) (SYMBOL, () (ID, B) (SYMBOL, :) (SYMBOL, )) (SYMBOL, ;) 
57.	(ID, for) (SYMBOL, () (ID, i) (SYMBOL, =) (NUM, 0) (SYMBOL, ;) (ID, i) (SYMBOL, <) (ID, N) (SYMBOL, ;) (ID, i) (SYMBOL, +) (SYMBOL, +) (SYMBOL, )) (ID, printf) (SYMBOL, () (ID, d) (SYMBOL, ,) (ID, B) (SYMBOL, [) (ID, i) (SYMBOL, ]) (SYMBOL, )) (SYMBOL, ;) 
58.	(ID, printf) (SYMBOL, () (SYMBOL, )) (SYMBOL, ;) 
60.	(ID, printf) (SYMBOL, () (ID, C) (SYMBOL, :) (SYMBOL, )) (SYMBOL, ;) 
61.	(ID, for) (SYMBOL, () (ID, i) (SYMBOL, =) (NUM, 0) (SYMBOL, ;) (ID, i) (SYMBOL, <) (ID, N) (SYMBOL, ;) (ID, i) (SYMBOL, +) (SYMBOL, +) (SYMBOL, )) (ID, printf) (SYMBOL, () (ID, d) (SYMBOL, ,) (ID, C) (SYMBOL, [) (ID, i) (SYMBOL, ]) (SYMBOL, )) (SYMBOL, ;) 
62.	(ID, printf) (SYMBOL, () (SYMBOL, )) (SYMBOL, ;) 
63.	(ID, printf
64.	(KEYWORD, return) (SYMBOL, ;) 
65.	(SYMBOL, }) 
69.	(KEYWORD, int) (ID, Move) (SYMBOL, () (KEYWORD, int) (SYMBOL, *) (ID, source) (SYMBOL, ,) (KEYWORD, int) (SYMBOL, *) (ID, dest) (SYMBOL, )) 
70.	(SYMBOL, {) 
71.	(KEYWORD, int) (ID, i) (SYMBOL, =) (NUM, 0) (SYMBOL, ,) (ID, j) (SYMBOL, =) (NUM, 0) (SYMBOL, ;) 
73.	(ID, while) (SYMBOL, () (ID, i) (SYMBOL, <) (ID, N) (SYMBOL, () (ID, source) (SYMBOL, [) (ID, i) (SYMBOL, ]) (SYMBOL, )) (SYMBOL, ==) (NUM, 0) (SYMBOL, )) (ID, i) (SYMBOL, +) (SYMBOL, +) (SYMBOL, ;) 
74.	(ID, while) (SYMBOL, () (ID, j) (SYMBOL, <) (ID, N) (SYMBOL, () (ID, dest) (SYMBOL, [) (ID, j) (SYMBOL, ]) (SYMBOL, )) (SYMBOL, ==) (NUM, 0) (SYMBOL, )) (ID, j) (SYMBOL, +) (SYMBOL, +) (SYMBOL, ;) 
76.	(ID, dest) (SYMBOL, [) (ID, j) (SYMBOL, -) (NUM, 1) (SYMBOL, ]) (SYMBOL, =) (ID, source) (SYMBOL, [) (ID, i) (SYMBOL, ]) (SYMBOL, ;) 
77.	(ID, source) (SYMBOL, [) (ID, i) (SYMBOL, ]) (SYMBOL, =) (NUM, 0) (SYMBOL, ;) 
78.	(ID, PrintAll) (SYMBOL, () (SYMBOL, )) (SYMBOL, ;) 
79.	(KEYWORD, return) (ID, dest) (SYMBOL, [) (ID, j) (SYMBOL, -) (NUM, 1) (SYMBOL, ]) (SYMBOL, ;) 
80.	(SYMBOL, }) 
86.	(KEYWORD, void) (ID, Hanoi) (SYMBOL, () (KEYWORD, int) (ID, n) (SYMBOL, ,) (KEYWORD, int) (SYMBOL, *) (ID, source) (SYMBOL, ,) (KEYWORD, int) (SYMBOL, *) (ID, dest) (SYMBOL, ,) (KEYWORD, int) (SYMBOL, *) (ID, spare) (SYMBOL, )) 
87.	(SYMBOL, {) 
88.	(KEYWORD, int) (ID, i) (SYMBOL, ;) 
89.	(KEYWORD, if) (SYMBOL, () (ID, n) (SYMBOL, ==) (NUM, 1) (SYMBOL, )) (SYMBOL, {) 
90.	(ID, Move) (SYMBOL, () (ID, source) (SYMBOL, ,) (ID, dest) (SYMBOL, )) (SYMBOL, ;) 
91.	(KEYWORD, return) (SYMBOL, ;) 
92.	(SYMBOL, }) 
94.	(ID, Hanoi) (SYMBOL, () (ID, n) (SYMBOL, -) (NUM, 1) (SYMBOL, ,) (ID, source) (SYMBOL, ,) (ID, spare) (SYMBOL, ,) (ID, dest) (SYMBOL, )) (SYMBOL, ;) 
95.	(ID, Move) (SYMBOL, () (ID, source) (SYMBOL, ,) (ID, dest) (SYMBOL, )) (SYMBOL, ;) 
96.	(ID, Hanoi) (SYMBOL, () (ID, n) (SYMBOL, -) (NUM, 1) (SYMBOL, ,) (ID, spare) (SYMBOL, ,) (ID, dest) (SYMBOL, ,) (ID, source) (SYMBOL, )) (SYMBOL, ;) 
97.	(KEYWORD, return) (SYMBOL, ;) 
98.	(SYMBOL, }) 
100.	(KEYWORD, int) (ID, main) (SYMBOL, () (SYMBOL, )) 
101.	(SYMBOL, {) 
102.	(KEYWORD, int) (ID, i) (SYMBOL, ;) 
105.	(ID, for) (SYMBOL, () (ID, i) (SYMBOL, =) (NUM, 0) (SYMBOL, ;) (ID, i) (SYMBOL, <) (ID, N) (SYMBOL, ;) (ID, i) (SYMBOL, +) (SYMBOL, +) (SYMBOL, )) (ID, A) (SYMBOL, [) (ID, i) (SYMBOL, ]) (SYMBOL, =) (ID, i) (SYMBOL, +) (NUM, 1) (SYMBOL, ;) 
106.	(ID, for) (SYMBOL, () (ID, i) (SYMBOL, =) (NUM, 0) (SYMBOL, ;) (ID, i) (SYMBOL, <) (ID, N) (SYMBOL, ;) (ID, i) (SYMBOL, +) (SYMBOL, +) (SYMBOL, )) (ID, B) (SYMBOL, [) (ID, i) (SYMBOL, ]) (SYMBOL, =) (NUM, 0) (SYMBOL, ;) 
107.	(ID, for) (SYMBOL, () (ID, i) (SYMBOL, =) (NUM, 0) (SYMBOL, ;) (ID, i) (SYMBOL, <) (ID, N) (SYMBOL, ;) (ID, i) (SYMBOL, +) (SYMBOL, +) (SYMBOL, )) (ID, C) (SYMBOL, [) (ID, i) (SYMBOL, ]) (SYMBOL, =) (NUM, 0) (SYMBOL, ;) 
109.	(ID, printf) (SYMBOL, () (ID, Solution) (ID, of) (ID, Tower) (ID, of) (ID, Hanoi) (ID, Problem) (ID, with) (ID, d) (SYMBOL, ,) (ID, N) (SYMBOL, )) (SYMBOL, ;) 
112.	(ID, printf) (SYMBOL, () (ID, Starting) (ID, state) (SYMBOL, :) (SYMBOL, )) (SYMBOL, ;) 
113.	(ID, PrintAll) (SYMBOL, () (SYMBOL, )) (SYMBOL, ;) 
114.	(ID, printf) (SYMBOL, () (ID, nSubsequent) (ID, states) (SYMBOL, :) (SYMBOL, )) (SYMBOL, ;) 
117.	(ID, Hanoi) (SYMBOL, () (ID, N) (SYMBOL, ,) (ID, A) (SYMBOL, ,) (ID, B) (SYMBOL, ,) (ID, C) (SYMBOL, )) (SYMBOL, ;) 
119.	(KEYWORD, return) (NUM, 0) (SYMBOL, ;) 
120.	(SYMBOL, }) 
