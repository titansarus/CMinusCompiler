1.	(KEYWORD, void) (ID, foo) (SYMBOL, () (KEYWORD, int) (SYMBOL, [) (NUM, 5) (SYMBOL, ]) (SYMBOL, )) (SYMBOL, ;) 
2.	(KEYWORD, void) (ID, fooc) (SYMBOL, () (KEYWORD, int) (ID, x) (SYMBOL, [) (ID, const) (NUM, 5) (SYMBOL, ]) (SYMBOL, )) (SYMBOL, ;) 
3.	(KEYWORD, void) (ID, foos) (SYMBOL, () (KEYWORD, int) (ID, x) (SYMBOL, [) (ID, static) (NUM, 5) (SYMBOL, ]) (SYMBOL, )) (SYMBOL, ;) 
4.	(KEYWORD, void) (ID, foov) (SYMBOL, () (KEYWORD, int) (ID, x) (SYMBOL, [) (ID, volatile) (NUM, 5) (SYMBOL, ]) (SYMBOL, )) (SYMBOL, ;) 
5.	(KEYWORD, void) (ID, foor) (SYMBOL, () (KEYWORD, int) (ID, x) (SYMBOL, [) (ID, restrict) (NUM, 5) (SYMBOL, ]) (SYMBOL, )) (SYMBOL, ;) 
6.	(KEYWORD, void) (ID, fooc) (SYMBOL, () (KEYWORD, int) (SYMBOL, [) (ID, const) (NUM, 5) (SYMBOL, ]) (SYMBOL, )) (SYMBOL, ;) 
7.	(KEYWORD, void) (ID, foos) (SYMBOL, () (KEYWORD, int) (SYMBOL, [) (ID, static) (NUM, 5) (SYMBOL, ]) (SYMBOL, )) (SYMBOL, ;) 
8.	(KEYWORD, void) (ID, foov) (SYMBOL, () (KEYWORD, int) (SYMBOL, [) (ID, volatile) (NUM, 5) (SYMBOL, ]) (SYMBOL, )) (SYMBOL, ;) 
9.	(KEYWORD, void) (ID, foor) (SYMBOL, () (KEYWORD, int) (SYMBOL, [) (ID, restrict) (NUM, 5) (SYMBOL, ]) (SYMBOL, )) (SYMBOL, ;) 
10.	(KEYWORD, void) (ID, fooc) (SYMBOL, () (KEYWORD, int) (SYMBOL, () (SYMBOL, *) (ID, const) (ID, x) (SYMBOL, )) (SYMBOL, )) (SYMBOL, ;) 
11.	(KEYWORD, void) (ID, foos) (SYMBOL, () (KEYWORD, int) (SYMBOL, *) (ID, x) (SYMBOL, )) (SYMBOL, ;) 
12.	(KEYWORD, void) (ID, foov) (SYMBOL, () (KEYWORD, int) (SYMBOL, *) (ID, volatile) (ID, x) (SYMBOL, )) (SYMBOL, ;) 
13.	(KEYWORD, void) (ID, foor) (SYMBOL, () (KEYWORD, int) (SYMBOL, *) (ID, restrict) (ID, x) (SYMBOL, )) (SYMBOL, ;) 
14.	(KEYWORD, void) (ID, fooc) (SYMBOL, () (KEYWORD, int) (ID, x) (SYMBOL, [) (ID, volatile) (NUM, 5) (SYMBOL, ]) (SYMBOL, )) 
15.	(SYMBOL, {) 
16.	(ID, x) (SYMBOL, [) (NUM, 3) (SYMBOL, ]) (SYMBOL, =) (NUM, 42) (SYMBOL, ;) 
17.	(ID, ifdef) (ID, INVALID) 
18.	(ID, x) (SYMBOL, =) (NUM, 0) (SYMBOL, ;) 
19.	(ID, endif) 
20.	(SYMBOL, }) 
21.	(KEYWORD, void) (ID, foovm) (SYMBOL, () (KEYWORD, int) (ID, x) (SYMBOL, [) (ID, const) (SYMBOL, *) (SYMBOL, ]) (SYMBOL, )) (SYMBOL, ;) 
22.	(KEYWORD, void) (ID, foovm) (SYMBOL, () (KEYWORD, int) (SYMBOL, *) (ID, const) (ID, x) (SYMBOL, )) (SYMBOL, ;) 
23.	(ID, ifdef) (ID, INVALID) 
24.	(KEYWORD, void) (ID, wrongc) (SYMBOL, () (KEYWORD, int) (ID, x) (SYMBOL, [) (NUM, 3) (SYMBOL, ]) (SYMBOL, [) (ID, const) (NUM, 4) (SYMBOL, ]) (SYMBOL, )) (SYMBOL, ;) 
25.	(KEYWORD, void) (ID, wrongvm) (SYMBOL, () (KEYWORD, int) (ID, x) (SYMBOL, [) (ID, static) (SYMBOL, *) (SYMBOL, ]) (SYMBOL, )) (SYMBOL, ;) 
26.	(KEYWORD, void) (ID, foovm) (SYMBOL, () (KEYWORD, int) (ID, x) (SYMBOL, [) (ID, const) (SYMBOL, *) (SYMBOL, ]) (SYMBOL, )) 
27.	(SYMBOL, {) 
28.	(ID, x) (SYMBOL, [) (NUM, 2) (SYMBOL, ]) (SYMBOL, =) (NUM, 1) (SYMBOL, ;) 
29.	(SYMBOL, }) 
30.	(ID, endif) 
31.	(KEYWORD, int) (ID, main) (SYMBOL, () (SYMBOL, )) 
32.	(SYMBOL, {) 
33.	(KEYWORD, return) (NUM, 0) (SYMBOL, ;) 
34.	(SYMBOL, }) 
