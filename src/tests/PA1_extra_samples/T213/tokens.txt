4.	(ID, extern) (KEYWORD, int) (ID, printf) (SYMBOL, () (ID, const) (ID, char) (SYMBOL, *) (SYMBOL, ,) (SYMBOL, )) (SYMBOL, ;) 
5.	(ID, static) (KEYWORD, void) (NUM, 1) (SYMBOL, () (KEYWORD, void) (SYMBOL, )) 
6.	(SYMBOL, {) 
7.	(ID, unsigned) (ID, long) (ID, timeout) (SYMBOL, =) (NUM, 2) (SYMBOL, ;) 
8.	(ID, do) (SYMBOL, {) 
15.	(SYMBOL, () (NUM, 1) 
16.	(ID, printf) (SYMBOL, () (ID, timeout) (SYMBOL, ,) (ID, timeout) (SYMBOL, )) (SYMBOL, :) 
17.	(SYMBOL, () (SYMBOL, {) 
18.	(KEYWORD, int) (ID, i) (SYMBOL, =) (NUM, 1) (SYMBOL, ;) 
19.	(ID, while) (SYMBOL, () (NUM, 1) (SYMBOL, )) 
20.	(ID, while) (SYMBOL, () (ID, i) (SYMBOL, -) (SYMBOL, -) (SYMBOL, )) 
21.	(ID, label) (SYMBOL, :) 
22.	(ID, printf) (SYMBOL, () (SYMBOL, )) (SYMBOL, ;) 
23.	(ID, goto) (ID, label) (SYMBOL, ;) 
24.	(SYMBOL, }) (SYMBOL, )) 
25.	(SYMBOL, )) (SYMBOL, ;) 
26.	(ID, timeout) (SYMBOL, -) (SYMBOL, -) (SYMBOL, ;) 
27.	(SYMBOL, }) (ID, while) (SYMBOL, () (ID, timeout) (SYMBOL, )) (SYMBOL, ;) 
28.	(SYMBOL, }) 
30.	(ID, static) (KEYWORD, int) (ID, global) (SYMBOL, ;) 
32.	(ID, static) (KEYWORD, void) (ID, foo) (SYMBOL, () (KEYWORD, int) (ID, i) (SYMBOL, )) 
33.	(SYMBOL, {) 
34.	(ID, global) (SYMBOL, +) (SYMBOL, =) (ID, i) (SYMBOL, ;) 
35.	(ID, printf) (SYMBOL, () (ID, g) (SYMBOL, ,) (ID, global) (SYMBOL, )) (SYMBOL, ;) 
36.	(SYMBOL, }) 
38.	(ID, static) (KEYWORD, int) (ID, check) (SYMBOL, () (KEYWORD, void) (SYMBOL, )) 
39.	(SYMBOL, {) 
40.	(ID, printf) (SYMBOL, () (ID, check) (SYMBOL, ,) (ID, global) (SYMBOL, )) (SYMBOL, ;) 
41.	(KEYWORD, return) (NUM, 1) (SYMBOL, ;) 
42.	(SYMBOL, }) 
44.	(ID, static) (KEYWORD, void) (ID, dowhile) (SYMBOL, () (KEYWORD, void) (SYMBOL, )) 
45.	(SYMBOL, {) 
46.	(ID, do) (SYMBOL, {) 
47.	(ID, foo) (SYMBOL, () (NUM, 1) (SYMBOL, )) (SYMBOL, ;) 
48.	(KEYWORD, if) (SYMBOL, () (ID, global) (SYMBOL, ==) (NUM, 1) (SYMBOL, )) (SYMBOL, {) 
49.	(ID, continue) (SYMBOL, ;) 
50.	(SYMBOL, }) (KEYWORD, else) (KEYWORD, if) (SYMBOL, () (ID, global) (SYMBOL, ==) (NUM, 2) (SYMBOL, )) (SYMBOL, {) 
51.	(ID, continue) (SYMBOL, ;) 
52.	(SYMBOL, }) 
55.	(KEYWORD, break) (SYMBOL, ;) 
56.	(SYMBOL, }) (ID, while) (SYMBOL, () (ID, check) (SYMBOL, () (SYMBOL, )) (SYMBOL, )) (SYMBOL, ;) 
57.	(SYMBOL, }) 
59.	(KEYWORD, int) (ID, main) (SYMBOL, () (KEYWORD, void) (SYMBOL, )) 
60.	(SYMBOL, {) 
61.	(KEYWORD, int) (ID, i) (SYMBOL, =) (NUM, 1) (SYMBOL, ;) 
62.	(NUM, 1) (SYMBOL, () (SYMBOL, )) (SYMBOL, ;) 
65.	(KEYWORD, if) (SYMBOL, () (NUM, 0) (SYMBOL, )) (SYMBOL, {) 
66.	(ID, yeah) (SYMBOL, :) 
67.	(ID, printf) (SYMBOL, () (SYMBOL, )) (SYMBOL, ;) 
68.	(SYMBOL, }) (KEYWORD, else) (SYMBOL, {) 
69.	(ID, printf) (SYMBOL, () (SYMBOL, )) (SYMBOL, ;) 
70.	(SYMBOL, }) 
71.	(KEYWORD, if) (SYMBOL, () (ID, i) (SYMBOL, -) (SYMBOL, -) (SYMBOL, )) 
72.	(ID, goto) (ID, yeah) (SYMBOL, ;) 
76.	(ID, i) (SYMBOL, =) (NUM, 1) (SYMBOL, ;) 
77.	(KEYWORD, if) (SYMBOL, () (NUM, 0) (SYMBOL, )) (SYMBOL, {) 
78.	(ID, while) (SYMBOL, () (ID, i) (SYMBOL, -) (SYMBOL, -) (SYMBOL, )) (SYMBOL, {) 
79.	(ID, printf) (SYMBOL, () (SYMBOL, )) (SYMBOL, ;) 
80.	(ID, enterloop) (SYMBOL, :) 
81.	(ID, printf) (SYMBOL, () (SYMBOL, )) (SYMBOL, ;) 
82.	(SYMBOL, }) 
83.	(SYMBOL, }) 
84.	(KEYWORD, if) (SYMBOL, () (ID, i) (SYMBOL, =) (NUM, 0) (SYMBOL, )) 
85.	(ID, goto) (ID, enterloop) (SYMBOL, ;) 
91.	(ID, i) (SYMBOL, =) (SYMBOL, () (SYMBOL, {) 
92.	(KEYWORD, int) (ID, j) (SYMBOL, =) (NUM, 1) (SYMBOL, ;) 
93.	(KEYWORD, if) (SYMBOL, () (NUM, 0) (SYMBOL, )) (SYMBOL, {) 
94.	(ID, while) (SYMBOL, () (ID, j) (SYMBOL, -) (SYMBOL, -) (SYMBOL, )) (SYMBOL, {) 
95.	(ID, printf) (SYMBOL, () (SYMBOL, )) (SYMBOL, ;) 
96.	(ID, enterexprloop) (SYMBOL, :) 
97.	(ID, printf) (SYMBOL, () (SYMBOL, )) (SYMBOL, ;) 
98.	(SYMBOL, }) 
99.	(SYMBOL, }) 
100.	(KEYWORD, if) (SYMBOL, () (ID, j) (SYMBOL, =) (NUM, 0) (SYMBOL, )) 
101.	(ID, goto) (ID, enterexprloop) (SYMBOL, ;) 
102.	(ID, j) (SYMBOL, ;) (SYMBOL, }) (SYMBOL, )) (SYMBOL, ;) 
105.	(ID, i) (SYMBOL, =) (NUM, 1) (SYMBOL, ;) 
106.	(KEYWORD, if) (SYMBOL, () (NUM, 0) (SYMBOL, )) (SYMBOL, {) 
107.	(ID, for) (SYMBOL, () (ID, i) (SYMBOL, =) (NUM, 1) (SYMBOL, ;) (ID, i) (SYMBOL, -) (SYMBOL, -) (SYMBOL, ;) (SYMBOL, )) (SYMBOL, {) 
108.	(ID, printf) (SYMBOL, () (SYMBOL, )) (SYMBOL, ;) 
109.	(ID, enterloop2) (SYMBOL, :) 
110.	(ID, printf) (SYMBOL, () (SYMBOL, )) (SYMBOL, ;) 
111.	(SYMBOL, }) 
112.	(SYMBOL, }) 
113.	(KEYWORD, if) (SYMBOL, () (ID, i) (NUM, 0) (SYMBOL, )) 
114.	(ID, goto) (ID, enterloop2) (SYMBOL, ;) 
116.	(ID, i) (SYMBOL, =) (NUM, 1) (SYMBOL, ;) 
117.	(KEYWORD, if) (SYMBOL, () (NUM, 0) (SYMBOL, )) (SYMBOL, {) 
118.	(ID, do) (SYMBOL, {) 
119.	(ID, printf) (SYMBOL, () (SYMBOL, )) (SYMBOL, ;) 
120.	(ID, enterloop3) (SYMBOL, :) 
121.	(ID, printf) (SYMBOL, () (SYMBOL, )) (SYMBOL, ;) 
122.	(SYMBOL, }) (ID, while) (SYMBOL, () (ID, i) (SYMBOL, -) (SYMBOL, -) (SYMBOL, )) (SYMBOL, ;) 
123.	(SYMBOL, }) 
124.	(KEYWORD, if) (SYMBOL, () (ID, i) (NUM, 0) (SYMBOL, )) 
125.	(ID, goto) (ID, enterloop3) (SYMBOL, ;) 
129.	(ID, i) (SYMBOL, =) (NUM, 41) (SYMBOL, ;) 
130.	(ID, switch) (SYMBOL, () (ID, i) (SYMBOL, )) (SYMBOL, {) 
131.	(KEYWORD, if) (SYMBOL, () (NUM, 0) (SYMBOL, )) (SYMBOL, {) 
132.	(ID, printf) (SYMBOL, () (SYMBOL, )) (SYMBOL, ;) 
133.	(ID, case) (NUM, 42) (SYMBOL, :) 
134.	(ID, printf) (SYMBOL, () (SYMBOL, )) (SYMBOL, ;) 
135.	(ID, case) (NUM, 41) (SYMBOL, :) 
136.	(ID, printf) (SYMBOL, () (SYMBOL, )) (SYMBOL, ;) 
137.	(SYMBOL, }) 
138.	(SYMBOL, }) 
140.	(ID, i) (SYMBOL, =) (NUM, 41) (SYMBOL, ;) 
141.	(ID, switch) (SYMBOL, () (ID, i) (SYMBOL, )) (SYMBOL, {) 
142.	(KEYWORD, if) (SYMBOL, () (NUM, 0) (SYMBOL, )) (SYMBOL, {) 
143.	(ID, printf) (SYMBOL, () (SYMBOL, )) (SYMBOL, ;) 
144.	(ID, default) (SYMBOL, :) 
145.	(ID, printf) (SYMBOL, () (SYMBOL, )) (SYMBOL, ;) 
146.	(KEYWORD, break) (SYMBOL, ;) 
147.	(ID, case) (NUM, 42) (SYMBOL, :) 
148.	(ID, printf) (SYMBOL, () (SYMBOL, )) (SYMBOL, ;) 
149.	(SYMBOL, }) 
150.	(SYMBOL, }) 
152.	(ID, dowhile) (SYMBOL, () (SYMBOL, )) (SYMBOL, ;) 
154.	(KEYWORD, return) (NUM, 0) (SYMBOL, ;) 
155.	(SYMBOL, }) 
