1.	(ID, typedef) (ID, struct) (SYMBOL, {) 
2.	(KEYWORD, int) (ID, v) (SYMBOL, ;) 
3.	(KEYWORD, int) (ID, sub) (SYMBOL, [) (NUM, 2) (SYMBOL, ]) (SYMBOL, ;) 
4.	(SYMBOL, }) (ID, S) (SYMBOL, ;) 
6.	(ID, S) (ID, a) (SYMBOL, [) (NUM, 1) (SYMBOL, ]) (SYMBOL, =) (SYMBOL, {) (SYMBOL, {) (NUM, 1) (SYMBOL, ,) (SYMBOL, {) (NUM, 2) (SYMBOL, ,) (NUM, 3) (SYMBOL, }) (SYMBOL, }) (SYMBOL, }) (SYMBOL, ;) 
8.	(KEYWORD, int) 
9.	(ID, main) (SYMBOL, () (SYMBOL, )) 
10.	(SYMBOL, {) 
11.	(KEYWORD, if) (SYMBOL, () (ID, a) (SYMBOL, [) (NUM, 0) (SYMBOL, ]) (ID, v) (SYMBOL, =) (NUM, 1) (SYMBOL, )) 
12.	(KEYWORD, return) (NUM, 1) (SYMBOL, ;) 
13.	(KEYWORD, if) (SYMBOL, () (ID, a) (SYMBOL, [) (NUM, 0) (SYMBOL, ]) (ID, sub) (SYMBOL, [) (NUM, 0) (SYMBOL, ]) (SYMBOL, =) (NUM, 2) (SYMBOL, )) 
14.	(KEYWORD, return) (NUM, 2) (SYMBOL, ;) 
15.	(KEYWORD, if) (SYMBOL, () (ID, a) (SYMBOL, [) (NUM, 0) (SYMBOL, ]) (ID, sub) (SYMBOL, [) (NUM, 1) (SYMBOL, ]) (SYMBOL, =) (NUM, 3) (SYMBOL, )) 
16.	(KEYWORD, return) (NUM, 3) (SYMBOL, ;) 
18.	(KEYWORD, return) (NUM, 0) (SYMBOL, ;) 
19.	(SYMBOL, }) 
